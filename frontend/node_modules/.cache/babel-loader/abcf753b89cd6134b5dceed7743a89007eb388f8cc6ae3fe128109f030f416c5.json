{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useScreenSize = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const checkScreenSize = () => {\n      // Consider screens smaller than 768px as mobile\n      // This covers most phones and small tablets\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    // Check on mount\n    checkScreenSize();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkScreenSize);\n\n    // Cleanup\n    return () => window.removeEventListener('resize', checkScreenSize);\n  }, []);\n  return isMobile;\n};\n_s(useScreenSize, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\nexport default useScreenSize;","map":{"version":3,"names":["useState","useEffect","useScreenSize","_s","isMobile","setIsMobile","checkScreenSize","window","innerWidth","addEventListener","removeEventListener"],"sources":["D:/HRApp/frontend/src/hooks/useScreenSize.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useScreenSize = () => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkScreenSize = () => {\r\n      // Consider screens smaller than 768px as mobile\r\n      // This covers most phones and small tablets\r\n      setIsMobile(window.innerWidth < 768);\r\n    };\r\n\r\n    // Check on mount\r\n    checkScreenSize();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', checkScreenSize);\r\n\r\n    // Cleanup\r\n    return () => window.removeEventListener('resize', checkScreenSize);\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport default useScreenSize; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMK,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA;MACAD,WAAW,CAACE,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;IACtC,CAAC;;IAED;IACAF,eAAe,CAAC,CAAC;;IAEjB;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,eAAe,CAAC;;IAElD;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,eAAe,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,QAAQ;AACjB,CAAC;AAACD,EAAA,CArBID,aAAa;AAuBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}