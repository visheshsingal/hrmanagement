{"ast":null,"code":"import{useState,useEffect}from'react';const useScreenSize=()=>{const[isMobile,setIsMobile]=useState(false);useEffect(()=>{const checkScreenSize=()=>{// Consider screens smaller than 768px as mobile\n// This covers most phones and small tablets\nsetIsMobile(window.innerWidth<768);};// Check on mount\ncheckScreenSize();// Add event listener for window resize\nwindow.addEventListener('resize',checkScreenSize);// Cleanup\nreturn()=>window.removeEventListener('resize',checkScreenSize);},[]);return isMobile;};export default useScreenSize;","map":{"version":3,"names":["useState","useEffect","useScreenSize","isMobile","setIsMobile","checkScreenSize","window","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/vishesh/Downloads/HRApp 4/frontend/src/hooks/useScreenSize.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useScreenSize = () => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkScreenSize = () => {\r\n      // Consider screens smaller than 768px as mobile\r\n      // This covers most phones and small tablets\r\n      setIsMobile(window.innerWidth < 768);\r\n    };\r\n\r\n    // Check on mount\r\n    checkScreenSize();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', checkScreenSize);\r\n\r\n    // Cleanup\r\n    return () => window.removeEventListener('resize', checkScreenSize);\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport default useScreenSize; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,eAAe,CAAGA,CAAA,GAAM,CAC5B;AACA;AACAD,WAAW,CAACE,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CACtC,CAAC,CAED;AACAF,eAAe,CAAC,CAAC,CAEjB;AACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,eAAe,CAAC,CAElD;AACA,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,eAAe,CAAC,CACpE,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}