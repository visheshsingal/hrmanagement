{"ast":null,"code":"var _jsxFileName = \"D:\\\\HRApp\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token header\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  };\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (state.token) {\n        setAuthToken(state.token);\n        try {\n          const res = await axios.get('/api/auth/me');\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: res.data,\n              token: state.token\n            }\n          });\n        } catch (error) {\n          dispatch({\n            type: 'LOGOUT'\n          });\n          setAuthToken(null);\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    loadUser();\n  }, [state.token]);\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n      setAuthToken(token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await axios.post('/api/auth/register', userData);\n      const {\n        token,\n        user\n      } = res.data;\n      setAuthToken(token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    setAuthToken(null);\n  };\n\n  // Update user profile\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      login,\n      register,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","setAuthToken","defaults","headers","common","setItem","removeItem","loadUser","res","get","data","error","login","email","password","post","success","_error$response","_error$response$data","message","response","register","userData","_error$response2","_error$response2$data","logout","updateUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/HRApp/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set auth token header\r\n  const setAuthToken = (token) => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      localStorage.setItem('token', token);\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n\r\n  // Load user on app start\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (state.token) {\r\n        setAuthToken(state.token);\r\n        try {\r\n          const res = await axios.get('/api/auth/me');\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: { user: res.data, token: state.token }\r\n          });\r\n        } catch (error) {\r\n          dispatch({ type: 'LOGOUT' });\r\n          setAuthToken(null);\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [state.token]);\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post('/api/auth/login', { email, password });\r\n      const { token, user } = res.data;\r\n      \r\n      setAuthToken(token);\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await axios.post('/api/auth/register', userData);\r\n      const { token, user } = res.data;\r\n      \r\n      setAuthToken(token);\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    setAuthToken(null);\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: 'UPDATE_USER', payload: userData });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}